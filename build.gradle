//Easy semantic version based off describe + tags
def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--dirty', '--long'
        standardOutput = stdout
    }
    def tagVer = stdout.toString().trim()
    def semVer = (tagVer =~ /v?([\d\.]+)/)[0][1]

    if (tagVer.contains('dev')) {
        semVer += "-SNAPSHOT"
    }
    return semVer
}

description = "Example Java client"
group = "com.kryptnostic"
version = getVersionName()

apply plugin: "maven-publish"
apply plugin: "application"
apply plugin: "java"
apply plugin: "maven"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "war"
apply from: "publish.gradle"

mainClassName = "com.kryptnostic.test.Client"

ext.sourceCompatibility=JavaVersion.VERSION_1_7
ext.targetCompatibility=JavaVersion.VERSION_1_7

repositories {
  mavenCentral()  
  mavenLocal()
  maven {
    url "https://build.shibboleth.net/nexus/content/groups/public/"
  }
  maven {
    url "http://maven.springframework.org/snapshot"
  }
  maven {
    url  "http://maven.springframework.org/milestone"
  }
  maven {
   url "http://repo.maven.apache.org/maven2"
  }
  maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
  }

}

ext.hazelcast_version='3.2.4'
dependencies {
    /*
     * Servlet API 3.1 
     * 100% Java Servlet Container and Servlet Configuration
     */
    providedCompile 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.1'
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    compile group: 'javax.servlet', name: 'jstl', version:'1.2'

    /*
     * SL4J + LOG4J
     * Currently use Log4J through sl4j. 
     * TODO: Switch to logback
     */
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version:'1.7.5'
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.5'

//    compile "ch.qos.logback:logback-classic:1.0.13"
    compile "log4j:log4j:1.2.17"

    /*
     * Metrics
     * Awesome reporting-- defaults to Graphite
     * TODO: Integrate Ryan's Spring integration 
     */
    compile 'com.codahale.metrics:metrics-core:3.0.1'
    compile 'com.codahale.metrics:metrics-graphite:3.0.1'
    compile 'com.ryantenney.metrics:metrics-spring:3.0.0'

    /*
     * GUAVA 
     * EventBus, FluentIterables, ListenableFutures and more
     */
    compile 'com.google.guava:guava:15.0'

    /*
     JODA TIME - A better datetime class.
     */
    compile 'joda-time:joda-time:2.3'
    
    /*
     * APACHE COMMONS
     * Logging, StringUtils, RandomStringUtils, IOUtils, and more
     */

    compile 'commons-io:commons-io:2.4'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'commons-logging:commons-logging:1.1.3'
    compile 'commons-collections:commons-collections:3.2.1'
    
    /*
     * Linear algebra including GF(2) matrices
     * TODO: Move to a separate plugin / remove from core
     */
	compile 'colt:colt:1.2.0'

    /*
     * Kryo serialization -- faster generic Java serialization
     */
    compile 'com.esotericsoftware.kryo:kryo:2.22'

    /*
     * HAZELCAST - DISTRIBUTED DATA GRID
     * Transparent http clustering, distributed java.util collections
     */
    compile "com.hazelcast:hazelcast:${hazelcast_version}"
    compile "com.hazelcast:hazelcast-client:${hazelcast_version}"
    compile "com.hazelcast:hazelcast-wm:${hazelcast_version}"
    compile "com.hazelcast:hazelcast-spring:${hazelcast_version}"


    compile "com.kryptnostic:kryptnostic-api:0.1.0-SNAPSHOT"
    compile "com.kryptnostic:kryptnostic-core:0.1.0-SNAPSHOT"

    /*
     * TESTING
     */
    testCompile 'junit:junit:4.11'
}


eclipse {
    ext.downloadSources = true
    ext.downloadJavadoc = true
    /*wtp {
        facet {
            facet name: "java", version:"1.7"
            facet name:"jst.web" , version:"3.1"
        }
    }*/
    ext.sourceCompatibility=JavaVersion.VERSION_1_7
    ext.targetCompatibility=JavaVersion.VERSION_1_7
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}